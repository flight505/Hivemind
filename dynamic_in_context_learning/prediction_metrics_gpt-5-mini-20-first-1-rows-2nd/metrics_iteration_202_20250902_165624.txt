PREDICTIVE METRICS - ITERATION 202
============================================================

Executive summary — immediate takeaways
- Failure: Passenger 0237_01 (CryoSleep=True; all spend channels 0.0) was predicted False but actual True — a false negative in an n==1 batch.
- Root cause (short): cryo_allzero is a fragile slice whose label mapping varies by cohort/cluster; fragile patterns were not detected pre‑imputation (or their semantics were lost), the calibrator under‑estimated uncertainty, and small‑n auto‑accept logic allowed an overconfident incorrect decision without GLM/ensemble checks.
- Immediate hotfix (recommended): compute cryo_allzero and other fragile flags pre‑imputation; for any n==1 or small n ≤ 10 record flagged fragile (including cryo_allzero) require GLM_fallback agreement, ensemble concordance, quantile width & SE floors — otherwise route to priority_audit. Add 0237_01 (and existing canaries) to CI and block auto_accept for them until validated.

Concise answers to the six operational questions (batch‑accuracy focus)
1) Which patterns caused the error?
- cryo_allzero (CryoSleep=True and zero spend vector OR explicit zeros) is brittle: the same pattern maps to True or False depending on Destination, cabin_deck, age, VIP, and missingness/ imputation semantics. The model treated zero spends as negative evidence (or imputation erased signal), the calibrator gave low uncertainty, and n==1 auto_accept allowed the incorrect prediction.

2) How should decision rules be modified?
- Flag fragile patterns pre‑imputation and use them directly in gating.
- For fragile_flag AND n_batch ≤ 10 (especially n==1): require GLM_fallback agreement (|p_model − p_glm| ≤ δ_slice), high ensemble_agreement, small quantile width (p90−p10), and se_combined above slice floor — otherwise route to priority_audit.
- If batch_frac_fragile ≥ 5% → hold entire batch.

3) New transport‑pattern insights?
- CryoSleep True + explicit zero spends does not deterministically imply transported=False. Its label depends on cohort context (Destination, cabin_deck) and whether zeros are explicit or from imputation. Treat as cluster‑conditioned, not globally monotonic.

4) How should confidence be recalibrated?
- Use a heteroskedastic quantile calibrator conditioned on fragile flags and contextual variables (top1_share_raw, missingness_count, total_spend_pctile, age_bucket, cabin_deck, Destination). Inflate uncertainty substantially for cryo_allzero and related fragile slices and enforce SE floors for small‑n.

5) What adjustments are needed for batch consistency?
- Preserve raw spend NaNs, compute fragility pre‑imputation, gate auto_decisions for fragiles at record and batch level, require GLM_fallback for small batches/fragiles, track batch_frac_fragile and throttle auto_accepts.

6) How can the metrics be improved for edge cases?
- Persist provenance, add canaries for fragile examples (include 0237_01), oversample fragile slices when training GLM_fallback, retrain heteroskedastic calibrator conditioned on fragiles, track slice KPIs and accept a temporary increase in audits.

Complete updated predictive metrics report (batch‑optimized, actionable)

A. What happened (concise)
- Failure: 0237_01 — CryoSleep=True; all explicit spends 0.0 → model predicted False but actual True (FN) in a batch of size 1.
- Root causes:
  - Fragile cryo_allzero slice not detected/conditioned prior to imputation/transform; explicit zeros vs imputed zeros not distinguished.
  - Per‑feature contributions and learned interactions did not capture cohort conditionality (Destination, cabin_deck, Age).
  - Calibrator under‑estimated uncertainty for cryo_allzero; auto_accept for n==1 fragiles allowed an erroneous FN.

B. Immediate hotfix actions (0–3h)
1) Hotfix gating (deploy now)
   - Compute fragile_flag_v1 pre‑imputation. Include: cryo_allzero, super_dominant, multi_high_spend, per_channel_abs_outlier, any_missing_channel, all_spend_nan.
   - If n_batch == 1 OR n_batch ≤ 10 AND fragile_flag_v1 is true:
     * Only allow auto_decision if ALL pass:
       - GLM_fallback_agrees: |p_model − p_glm| ≤ δ_slice (use δ_cryo tighter = 0.03),
       - ensemble_agreement ≥ A_high (0.995),
       - (p90 − p10) ≤ QW_accept_slice (0.12),
       - se_combined ≥ slice_se_floor (temporarily increase cryo n==1 se_floor to 0.90 while hotfix active).
     * Otherwise route to priority_audit.
   - If batch_frac_fragile ≥ 5% → hold entire batch for manual review.

2) Canary & CI
   - Add canaries: 0225_01, 0231_01, 0232_01, 0233_01, 0237_01 to CI. Block auto_accept for these until hotfix gating validated.
   - Log reason codes on every blocked/auto‑accepted canary.

3) Preserve provenance (immediate)
   - Persist raw per_channel spends (NaNs preserved), missingness bitmap, and computed pre‑imputation flags.

4) Temporary calibrator tweak
   - Increase heteroskedastic se component for cryo_allzero records in scoring (κ_cryo bump + enforce se_floor n==1=0.90) until calibrator retrain validated.

C. Pre‑imputation detectors & flag definitions (compute before any imputation)
- Preserve raw_spend vector and missingness bitmap.
- non_nan_spend_count
- zero_spend_vector_flag: all non‑NaN spends ≤ SPEND_ZERO_TOLERANCE AND non_nan_spend_count ≥ 1.
- cryo_allzero_flag: CryoSleep==True AND zero_spend_vector_flag.
- all_spend_nan_flag: all channels are NaN.
- imputed_zero_all_flag: all channels were NaN but imputation set zeros (detect via per_channel_imputed_flags).
- top1_channel, top1_value_raw, top1_share_raw.
- super_dominant_flag, multi_high_spend_flag, per_channel_abs_outlier_flag, any_missing_channel_flag, channel_entropy_raw.
- fragility_score: composite monotonic score using top1_share_raw, non_nan_spend_count (low → more fragile), missingness_count, cryo_allzero_flag, super_dominant_flag, multi_high_spend_flag.

D. Feature engineering and preprocessing updates
- Preserve raw per_channel spends (NaNs preserved) and feed flags to model.
- Create explicit features:
  - zero_spend_vector_flag, imputed_zero_all_flag, all_spend_nan_flag, non_nan_spend_count.
  - top1_share_raw, top1_channel, top2_value_raw, topk_sum, channel_entropy_raw.
- Interactions to add (important for cryo_allzero):
  - cryo_allzero_flag × Destination,
  - cryo_allzero_flag × cabin_deck,
  - cryo_allzero_flag × Age_bucket,
  - multi_high_spend_flag × top1_channel × Destination × cabin_deck.
- Persist pre‑imputation flags to model inputs and gating logic.

E. Per‑feature logit caps & dampening (do not blunt cryo signal)
- Continue per_feature_logit_cap to prevent runaway contributions for spend channels, but exempt or treat cryo boolean and cryo_allzero_flag specially:
  - Compute per_feature_logit_contrib = w_f × value_f.
  - capped_contrib = sign(contrib) × min(|contrib|, CAP_PER_FEATURE_LOGIT).
  - If sum(topk_positive_contribs) > LOGIT_TOPK_SUM_CAP then scale positives by β_high.
  - Exception: cryo feature contributions should NOT be bluntly zeroed — if capped would change decision, require GLM_fallback review rather than silently reweighting cryo signal.
- Start values (tunable):
  - CAP_PER_FEATURE_LOGIT = 0.9
  - LOGIT_TOPK_SUM_CAP = 1.4
  - β_high = 0.60
- Log caps_triggered & dampening_reasons per record.

F. Variance / heteroskedastic SE model (inflate uncertainty for fragiles)
- var_combined = var_base +
    κ_top1_high*I(top1_pctile ≥ 0.95) +
    κ_super_dom*I(super_dominant_flag) +
    κ_cryo*I(cryo_allzero_flag) +
    κ_infant*I(infant_allzero_flag) +
    κ_impute*imputed_count +
    κ_missing*missingness_count +
    κ_multi_high*I(multi_high_spend_flag)
- Recommended κ starting values:
  - κ_top1_high = 0.65
  - κ_super_dom = 1.40
  - κ_cryo = 1.80 (increase to reflect observed FN risk)
  - κ_infant = 0.60
  - κ_impute = 0.25
  - κ_missing = 0.30
  - κ_multi_high = 1.10
- se_combined = sqrt(max(var_combined, se_floor(context)^2))
- SE floors (start values; hotfix temporary increases noted):
  - n==1 & cryo_allzero_flag → se_floor = 0.90 (temporary hotfix; lower to 0.85 after validation)
  - n==1 & super_dominant_flag → se_floor = 0.85
  - n==1 & multi_high_spend_flag → se_floor = 0.85
  - n==1 & other fragile_flag → se_floor = 0.75
  - n>1 but batch_frac_fragile > 5% → se_floor = 0.55

G. Decision‑gating (pattern‑aware + batch/cohort aware)
- fragile_flag_v2 = union(cryo_allzero, super_dominant, infant_allzero, single_channel_dominant, multi_high_spend, per_channel_abs_outlier, any_missing_channel, all_spend_nan_flag, imputed_count ≥ 1).
- batch_frac_fragile = count(fragile_flag_v2)/|B|.
- If batch_frac_fragile ≥ BATCH_FRAGILE_THRESHOLD (0.05) → route entire batch to priority_audit.
- n==1 fragile gating:
  - Allow auto decision ONLY if ALL:
    * GLM_fallback_agrees (|p_model − p_glm| ≤ δ_slice),
    * ensemble_agreement ≥ A_high,
    * se_combined ≤ SE_accept_slice AND (p90 − p10) ≤ QW_accept_slice.
  - For cryo_allzero require stricter tolerances: δ_cryo = 0.03; A_high = 0.995; se_floor as above.
  - If GLM disagrees, quantile width large, or se_combined below floor → priority_audit.

H. Calibrator & GLM_fallback retrain plan
- Calibrator:
  - Heteroskedastic quantile calibrator producing p10/p50/p90 conditioned on fragile flags and contextual features (cryo_allzero_flag, top1_share_raw, total_spend_pctile, missingness_count, age_bucket, cabin_deck, Destination).
  - Loss: weighted pinball + median Brier + monotonicity regularizer; upweight fragile records in loss to better model uncertainty.
  - Shadow run 14–28 days; keep hotfix gating until validated.

- GLM_fallback:
  - ElasticNet logistic on winsorized log1p spends + fragile flags + missingness_bitmap + top1_share_raw + age_bucket + cabin_deck + Destination + interactions (especially cryo_interactions).
  - Serve GLM_fallback for all batches; require GLM for small‑n fragiles auto_decisions.
  - Reweight / oversample fragile slices in training so GLM learns cohort conditionality (ensure both labels present for cryo_allzero across Destinations).
  - Maintain interpretability — GLM coefficients should be auditable and used as an explicit veto/confirmation.

I. Mixture priors, cluster detection & slice conditioning
- Cluster on demographics + raw_spend_vector + missingness_signature + cabin_deck + Destination.
- Compute μ_cluster (transport rate for the cluster) and N_cluster and blend with global μ_global using hierarchical shrinkage:
  - μ_blend = (N_cluster/(N_cluster + τ))*μ_cluster + (τ/(N_cluster + τ))*μ_global
- Use cluster N to gate reliability (N_min_slice = 60). For cryo_allzero clusters with N_cluster < N_min_slice treat as fragile and require audit/GLM agreement.

J. Monitoring, metrics & alerts (batch‑focused)
- New KPIs:
  - cryo_allzero_FN_rate and FP_rate by cohort (Destination, cabin_deck, age_bucket).
  - super_dominant_FP_rate / FN_rate by channel.
  - multi_high_spend_FP_rate / FN_rate by top1/topk bins.
  - top1_share calibration bins ([0.8–0.9, 0.9–0.95, >0.95]).
  - n==1_auto_accept_rate; n==1_fragile_auto_accept_rate.
  - batch_frac_fragile, batch_hold_rate, caps_trigger_rate.
- Alerts:
  - Canary auto_accepted (0225_01, 0231_01, 0232_01, 0233_01, 0237_01) → immediate page.
  - cryo_allzero_FN_rate increase beyond threshold → page.
  - batch_frac_fragile ≥ threshold → hold + page.

K. CI unit tests & validation
- Unit tests (must run pre‑deploy):
  - Pre‑imputation flags computed before transforms; NaNs preserved.
  - cryo_allzero_flag triggers when CryoSleep==True AND zero_spend_vector_flag True.
  - super_dominant_flag & multi_high_spend_flag detection tests (include both labels).
  - se_combined respects se_floor for n==1 cryo_allzero.
  - Gating logic prevents auto_accept for n==1 fragile unless safety checks pass.
- Regression tests:
  - Slice‑level FP/FN for cryo_allzero, super_dominant, multi_high_spend must not increase.
- Synthetic stress tests:
  - Inject cryo_allzero positive & negative cases across Destinations and cabin_decks (include 0237_01 and others) and verify gating + GLM behavior.

L. Operational actions & timeline (0–72h)
1) Immediate (0–3h)
   - Deploy hotfix gating for n==1 and n ≤ 10 fragiles; persist provenance; add canaries.
   - Temporarily increase cryo se_floor to 0.90 and enforce GLM fallback gating for cryo_allzero.
2) Short (3–24h)
   - Implement pre‑imputation detectors + baseline GLM_fallback; compute batch_frac_fragile dashboards; start label audit of historical cryo_allzero cases including 0225_01, 0231_01, 0232_01, 0233_01, 0237_01.
   - Shadow run GLM and heteroskedastic calibrator.
3) Mid (24–72h)
   - Retrain heteroskedastic calibrator and GLM_fallback conditioned on audited fragile labels; integrate cluster priors; run extended shadow run (14–28 days) before relaxing hotfix gating.
4) Longer term
   - Retrain main model with explicit cryo_allzero interactions, cluster priors, and schedule monthly percentile recomputes and hyperparameter sweeps.

M. Per‑record provenance to log (minimum)
- Raw per_channel spends (NaNs preserved), per_channel_imputed_flags & imputation_method.
- cryo_allzero_flag, imputed_zero_all_flag, multi_high_spend_flag, top1_channel, top1_value_raw, top1_share_raw.
- sum_raw_spend, total_spend_pctile, non_nan_spend_count, channel_entropy_raw.
- Model internals: per_feature_logit_contributions (raw & capped), caps_triggered, dampening_reason, pooled_prior_snapshot_id, μ_slice, τ_slice_blend.
- Variance: var_components, var_combined, se_combined.
- Decision meta: GLM_fallback_probs, GLM_fallback_agreement_flag, ensemble_probs, p10/p50/p90, gating_reasons, routing_decision, scorer_version.
- Canary event logs when a canary is routed/auto_accepted.

N. Initial hyperparameters (start values; sweepable)
- SPEND_ZERO_TOLERANCE = 1e‑6
- TOTAL_SPEND_OUTLIER_PERC = 0.995
- CHANNEL_SPEND_PCTILE_HIGH = 0.95
- SE floor n==1 cryo_allzero = 0.90 (hotfix; later 0.85)
- SE floor n==1 super_dominant = 0.85
- SE floor n==1 multi_high_spend = 0.85
- κ_super_dom = 1.40; κ_cryo = 1.80; κ_multi_high = 1.10; κ_top1_high = 0.65
- β_high = 0.60
- CAP_PER_FEATURE_LOGIT = 0.9; LOGIT_TOPK_SUM_CAP = 1.4
- BATCH_FRAGILE_THRESHOLD = 0.05
- N_min_slice = 60; τ_high_slice = 0.95
- δ_slice (GLM tolerance) = 0.05; δ_cryo = 0.03
- A_high (ensemble agreement) = 0.995
- QW_accept_slice (quantile width) = 0.12

O. Gating pseudocode (pattern‑aware, batch focused)
- For each batch B:
  - compute batch_frac_fragile = count(r in B where fragile_flag_v2)/|B|.
  - If batch_frac_fragile ≥ BATCH_FRAGILE_THRESHOLD: route all r -> priority_audit; continue.
  - For each r in B:
    - compute pre‑imputation flags (cryo_allzero_flag, super_dominant_flag, multi_high_spend_flag, imputed_zero_all_flag, etc.) with NaNs preserved.
    - set fragile_flag_v2 = union(...).
    - If fragile_flag_v2 AND n_batch ≤ 10:
      - If GLM_fallback_agrees & ensemble_agreement ≥ A_high & se_combined ≤ SE_accept AND (p90 − p10) ≤ QW_accept:
        - allow auto_decision
      - Else:
        - route r -> priority_audit
    - Else If n_batch == 1 and cryo_allzero_flag:
      - If GLM_fallback_agrees & ensemble_agreement ≥ A_high & se_combined ≤ SE_accept_slice AND (p90 − p10) ≤ QW_accept_slice:
        - allow auto_decision
      - Else:
        - route r -> priority_audit

P. Specific diagnoses — short chains of failure
- Passenger 0237_01 (cryo_allzero false negative)
  - Raw: CryoSleep=True; RoomService=0.0; FoodCourt=0.0; ShoppingMall=0.0; Spa=0.0; VRDeck=0.0 → cryo_allzero_flag true.
  - Failure chain:
    1) Fragility (cryo_allzero) not computed/enforced pre‑processing; explicit zeros not specially handled.
    2) Model assigned low p_model for transport (learned correlation from different cohorts or over‑fit elsewhere).
    3) Calibrator did not inflate uncertainty for cryo_allzero; p90 − p10 narrow; se_combined low.
    4) n==1 auto_accept allowed FN without GLM check → FN accepted.
  - Correct mitigation: flag cryo_allzero pre‑scoring, require GLM_fallback/ensemble agreement for n==1 fragiles, or route to audit.

Q. How these changes reduce batch errors (short)
- Pre‑imputation detection preserves missingness and flags fragiles so decisions are gated.
- Heteroskedastic calibrator inflates uncertainty for cryo_allzero and multi_high_spend so model reflects true ambiguity.
- GLM_fallback + ensemble gating provides an interpretable safety net for small‑n fragiles, reducing FNs and FPs.
- Cluster priors condition predictions on cohort context, reducing cohort‑mismatched errors.

R. Tradeoffs & operational notes
- Expect increase in audits and human triage short‑term (hotfix). This is acceptable to protect production accuracy.
- Global metrics (AUC/ECE) may temporarily shift while brittle slice behavior is addressed.
- Slight compute and latency increases (GLM_fallback, calibrator), but gating limited to small‑n fragiles minimizes impact.

S. Runnable checklist (concrete)
- Do NOT auto‑accept any n==1 record where cryo_allzero_flag OR super_dominant_flag OR multi_high_spend_flag OR per_channel_abs_outlier OR all_spend_nan_flag OR imputed_count ≥ 1 OR any_missing_channel_flag is present, UNLESS GLM+ensemble+calibrator safety checks pass.
- Add canaries 0225_01, 0231_01, 0232_01, 0233_01, 0237_01 to CI; block auto_accept until safety checks pass.
- Persist raw spend vectors (NaNs preserved), per_channel_imputed_flags, and pre‑imputation flags in logs.
- Enforce temporary cryo n==1 se_floor = 0.90 and GLM_fallback gating.
- Start labeling/auditing historical cryo_allzero examples to build representative training data.

T. Next steps — prioritized deliverables
1) Immediate (highest priority): Hotfix gating + Canary CI (PR + unit tests blocking auto_accept of fragile canaries). Low code change; immediate risk mitigation.
2) Short: Implement GLM_fallback training pipeline; persist raw spends and pre‑imputation flags; compute batch_frac_fragile dashboards; begin label audit of historical fragile cases including 0237_01.
3) Mid: Retrain heteroskedastic calibrator & GLM_fallback using audited fragile labels; integrate cluster priors; run extended shadow run before relaxing hotfix gating.
4) Long: Retrain main model with explicit cryo_allzero and multi_high_spend interactions, deploy monthly percentile recomputes & hyperparameter sweeps.

Targets and acceptance criteria
- With hotfix gating active: n==1 fragile auto_accepted rate → 0.
- After retrain & shadow: reduce cryo_allzero FN_rate and super_dominant/multi_high_spend FP_rate by ≥50% OR reduce auto_accept_rate for fragiles to <2% of total auto_decisions while holding acceptable global ECE/AUC.

Why this addresses 0237_01 specifically
- Detects cryo_allzero pre‑scoring and treats it as fragile so the record cannot be auto‑accepted without GLM/ensemble confirmation.
- Inflates uncertainty via heteroskedastic calibrator and enforces SE floor so narrow p-intervals will not falsely imply confidence.
- GLM_fallback provides an interpretable check that can veto a complex model if cohort‑conditional patterns (which GLM is trained to capture with reweighted fragile examples) disagree.

Would you like me to:
- Produce the hotfix PR (code skeleton + unit tests + canary asserts) now? (recommended first), or
- Produce the GLM_fallback training notebook + baseline metrics, or
- Produce the heteroskedastic calibrator spec & hyperparameter sweep plan?

Recommendation: hotfix gating + Canary CI first. If you confirm, I will produce the hotfix PR (pseudocode, unit tests, CI canary assertions) next.

============================================================